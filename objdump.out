
main:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 9a 2f 00 00    	pushq  0x2f9a(%rip)        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 9b 2f 00 00 	bnd jmpq *0x2f9b(%rip)        # 3fc8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop

Disassembly of section .plt.got:

0000000000001040 <__cxa_finalize@plt>:
    1040:	f3 0f 1e fa          	endbr64 
    1044:	f2 ff 25 ad 2f 00 00 	bnd jmpq *0x2fad(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    104b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001050 <printf@plt>:
    1050:	f3 0f 1e fa          	endbr64 
    1054:	f2 ff 25 75 2f 00 00 	bnd jmpq *0x2f75(%rip)        # 3fd0 <printf@GLIBC_2.2.5>
    105b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001060 <_start>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	31 ed                	xor    %ebp,%ebp
    1066:	49 89 d1             	mov    %rdx,%r9
    1069:	5e                   	pop    %rsi
    106a:	48 89 e2             	mov    %rsp,%rdx
    106d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1071:	50                   	push   %rax
    1072:	54                   	push   %rsp
    1073:	4c 8d 05 c6 02 00 00 	lea    0x2c6(%rip),%r8        # 1340 <__libc_csu_fini>
    107a:	48 8d 0d 4f 02 00 00 	lea    0x24f(%rip),%rcx        # 12d0 <__libc_csu_init>
    1081:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1149 <main>
    1088:	ff 15 52 2f 00 00    	callq  *0x2f52(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    108e:	f4                   	hlt    
    108f:	90                   	nop

0000000000001090 <deregister_tm_clones>:
    1090:	48 8d 3d 81 2f 00 00 	lea    0x2f81(%rip),%rdi        # 4018 <eleven>
    1097:	48 8d 05 7a 2f 00 00 	lea    0x2f7a(%rip),%rax        # 4018 <eleven>
    109e:	48 39 f8             	cmp    %rdi,%rax
    10a1:	74 15                	je     10b8 <deregister_tm_clones+0x28>
    10a3:	48 8b 05 2e 2f 00 00 	mov    0x2f2e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10aa:	48 85 c0             	test   %rax,%rax
    10ad:	74 09                	je     10b8 <deregister_tm_clones+0x28>
    10af:	ff e0                	jmpq   *%rax
    10b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10b8:	c3                   	retq   
    10b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010c0 <register_tm_clones>:
    10c0:	48 8d 3d 51 2f 00 00 	lea    0x2f51(%rip),%rdi        # 4018 <eleven>
    10c7:	48 8d 35 4a 2f 00 00 	lea    0x2f4a(%rip),%rsi        # 4018 <eleven>
    10ce:	48 29 fe             	sub    %rdi,%rsi
    10d1:	48 89 f0             	mov    %rsi,%rax
    10d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10d8:	48 c1 f8 03          	sar    $0x3,%rax
    10dc:	48 01 c6             	add    %rax,%rsi
    10df:	48 d1 fe             	sar    %rsi
    10e2:	74 14                	je     10f8 <register_tm_clones+0x38>
    10e4:	48 8b 05 05 2f 00 00 	mov    0x2f05(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    10eb:	48 85 c0             	test   %rax,%rax
    10ee:	74 08                	je     10f8 <register_tm_clones+0x38>
    10f0:	ff e0                	jmpq   *%rax
    10f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10f8:	c3                   	retq   
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <__do_global_dtors_aux>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	80 3d 09 2f 00 00 00 	cmpb   $0x0,0x2f09(%rip)        # 4014 <completed.8060>
    110b:	75 2b                	jne    1138 <__do_global_dtors_aux+0x38>
    110d:	55                   	push   %rbp
    110e:	48 83 3d e2 2e 00 00 	cmpq   $0x0,0x2ee2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1115:	00 
    1116:	48 89 e5             	mov    %rsp,%rbp
    1119:	74 0c                	je     1127 <__do_global_dtors_aux+0x27>
    111b:	48 8b 3d e6 2e 00 00 	mov    0x2ee6(%rip),%rdi        # 4008 <__dso_handle>
    1122:	e8 19 ff ff ff       	callq  1040 <__cxa_finalize@plt>
    1127:	e8 64 ff ff ff       	callq  1090 <deregister_tm_clones>
    112c:	c6 05 e1 2e 00 00 01 	movb   $0x1,0x2ee1(%rip)        # 4014 <completed.8060>
    1133:	5d                   	pop    %rbp
    1134:	c3                   	retq   
    1135:	0f 1f 00             	nopl   (%rax)
    1138:	c3                   	retq   
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <frame_dummy>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	e9 77 ff ff ff       	jmpq   10c0 <register_tm_clones>

0000000000001149 <main>:
    1149:	f3 0f 1e fa          	endbr64 
    114d:	55                   	push   %rbp
    114e:	48 89 e5             	mov    %rsp,%rbp
    1151:	48 8d 3d ac 0e 00 00 	lea    0xeac(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    1158:	b8 00 00 00 00       	mov    $0x0,%eax
    115d:	e8 ee fe ff ff       	callq  1050 <printf@plt>
    1162:	b8 00 00 00 00       	mov    $0x0,%eax
    1167:	e8 83 00 00 00       	callq  11ef <print_hello2>
    116c:	b8 00 00 00 00       	mov    $0x0,%eax
    1171:	e8 95 00 00 00       	callq  120b <return_11>
    1176:	89 c6                	mov    %eax,%esi
    1178:	48 8d 3d 93 0e 00 00 	lea    0xe93(%rip),%rdi        # 2012 <_IO_stdin_used+0x12>
    117f:	b8 00 00 00 00       	mov    $0x0,%eax
    1184:	e8 c7 fe ff ff       	callq  1050 <printf@plt>
    1189:	b8 00 00 00 00       	mov    $0x0,%eax
    118e:	e8 87 00 00 00       	callq  121a <function_call>
    1193:	bf 00 00 00 00       	mov    $0x0,%edi
    1198:	e8 a3 00 00 00       	callq  1240 <recurse>
    119d:	b8 00 00 00 00       	mov    $0x0,%eax
    11a2:	e8 c1 00 00 00       	callq  1268 <loop>
    11a7:	8b 05 63 2e 00 00    	mov    0x2e63(%rip),%eax        # 4010 <three>
    11ad:	89 c6                	mov    %eax,%esi
    11af:	48 8d 3d 5f 0e 00 00 	lea    0xe5f(%rip),%rdi        # 2015 <_IO_stdin_used+0x15>
    11b6:	b8 00 00 00 00       	mov    $0x0,%eax
    11bb:	e8 90 fe ff ff       	callq  1050 <printf@plt>
    11c0:	8b 05 4a 2e 00 00    	mov    0x2e4a(%rip),%eax        # 4010 <three>
    11c6:	83 c0 07             	add    $0x7,%eax
    11c9:	89 05 49 2e 00 00    	mov    %eax,0x2e49(%rip)        # 4018 <eleven>
    11cf:	8b 05 43 2e 00 00    	mov    0x2e43(%rip),%eax        # 4018 <eleven>
    11d5:	89 c6                	mov    %eax,%esi
    11d7:	48 8d 3d 37 0e 00 00 	lea    0xe37(%rip),%rdi        # 2015 <_IO_stdin_used+0x15>
    11de:	b8 00 00 00 00       	mov    $0x0,%eax
    11e3:	e8 68 fe ff ff       	callq  1050 <printf@plt>
    11e8:	b8 00 00 00 00       	mov    $0x0,%eax
    11ed:	5d                   	pop    %rbp
    11ee:	c3                   	retq   

00000000000011ef <print_hello2>:
    11ef:	f3 0f 1e fa          	endbr64 
    11f3:	55                   	push   %rbp
    11f4:	48 89 e5             	mov    %rsp,%rbp
    11f7:	48 8d 3d 1b 0e 00 00 	lea    0xe1b(%rip),%rdi        # 2019 <_IO_stdin_used+0x19>
    11fe:	b8 00 00 00 00       	mov    $0x0,%eax
    1203:	e8 48 fe ff ff       	callq  1050 <printf@plt>
    1208:	90                   	nop
    1209:	5d                   	pop    %rbp
    120a:	c3                   	retq   

000000000000120b <return_11>:
    120b:	f3 0f 1e fa          	endbr64 
    120f:	55                   	push   %rbp
    1210:	48 89 e5             	mov    %rsp,%rbp
    1213:	b8 0b 00 00 00       	mov    $0xb,%eax
    1218:	5d                   	pop    %rbp
    1219:	c3                   	retq   

000000000000121a <function_call>:
    121a:	f3 0f 1e fa          	endbr64 
    121e:	55                   	push   %rbp
    121f:	48 89 e5             	mov    %rsp,%rbp
    1222:	48 8d 3d 03 0e 00 00 	lea    0xe03(%rip),%rdi        # 202c <_IO_stdin_used+0x2c>
    1229:	b8 00 00 00 00       	mov    $0x0,%eax
    122e:	e8 1d fe ff ff       	callq  1050 <printf@plt>
    1233:	b8 00 00 00 00       	mov    $0x0,%eax
    1238:	e8 ce ff ff ff       	callq  120b <return_11>
    123d:	90                   	nop
    123e:	5d                   	pop    %rbp
    123f:	c3                   	retq   

0000000000001240 <recurse>:
    1240:	f3 0f 1e fa          	endbr64 
    1244:	55                   	push   %rbp
    1245:	48 89 e5             	mov    %rsp,%rbp
    1248:	48 83 ec 10          	sub    $0x10,%rsp
    124c:	89 7d fc             	mov    %edi,-0x4(%rbp)
    124f:	83 7d fc 05          	cmpl   $0x5,-0x4(%rbp)
    1253:	74 10                	je     1265 <recurse+0x25>
    1255:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1259:	8b 45 fc             	mov    -0x4(%rbp),%eax
    125c:	89 c7                	mov    %eax,%edi
    125e:	e8 dd ff ff ff       	callq  1240 <recurse>
    1263:	eb 01                	jmp    1266 <recurse+0x26>
    1265:	90                   	nop
    1266:	c9                   	leaveq 
    1267:	c3                   	retq   

0000000000001268 <loop>:
    1268:	f3 0f 1e fa          	endbr64 
    126c:	55                   	push   %rbp
    126d:	48 89 e5             	mov    %rsp,%rbp
    1270:	48 83 ec 10          	sub    $0x10,%rsp
    1274:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    127b:	eb 1a                	jmp    1297 <loop+0x2f>
    127d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1280:	89 c6                	mov    %eax,%esi
    1282:	48 8d 3d b7 0d 00 00 	lea    0xdb7(%rip),%rdi        # 2040 <_IO_stdin_used+0x40>
    1289:	b8 00 00 00 00       	mov    $0x0,%eax
    128e:	e8 bd fd ff ff       	callq  1050 <printf@plt>
    1293:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1297:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)
    129b:	7e e0                	jle    127d <loop+0x15>
    129d:	90                   	nop
    129e:	90                   	nop
    129f:	c9                   	leaveq 
    12a0:	c3                   	retq   

00000000000012a1 <multiple_return_stmts>:
    12a1:	f3 0f 1e fa          	endbr64 
    12a5:	55                   	push   %rbp
    12a6:	48 89 e5             	mov    %rsp,%rbp
    12a9:	89 7d fc             	mov    %edi,-0x4(%rbp)
    12ac:	8b 45 fc             	mov    -0x4(%rbp),%eax
    12af:	99                   	cltd   
    12b0:	c1 ea 1f             	shr    $0x1f,%edx
    12b3:	01 d0                	add    %edx,%eax
    12b5:	83 e0 01             	and    $0x1,%eax
    12b8:	29 d0                	sub    %edx,%eax
    12ba:	83 f8 01             	cmp    $0x1,%eax
    12bd:	75 07                	jne    12c6 <multiple_return_stmts+0x25>
    12bf:	b8 01 00 00 00       	mov    $0x1,%eax
    12c4:	eb 05                	jmp    12cb <multiple_return_stmts+0x2a>
    12c6:	b8 00 00 00 00       	mov    $0x0,%eax
    12cb:	5d                   	pop    %rbp
    12cc:	c3                   	retq   
    12cd:	0f 1f 00             	nopl   (%rax)

00000000000012d0 <__libc_csu_init>:
    12d0:	f3 0f 1e fa          	endbr64 
    12d4:	41 57                	push   %r15
    12d6:	4c 8d 3d db 2a 00 00 	lea    0x2adb(%rip),%r15        # 3db8 <__frame_dummy_init_array_entry>
    12dd:	41 56                	push   %r14
    12df:	49 89 d6             	mov    %rdx,%r14
    12e2:	41 55                	push   %r13
    12e4:	49 89 f5             	mov    %rsi,%r13
    12e7:	41 54                	push   %r12
    12e9:	41 89 fc             	mov    %edi,%r12d
    12ec:	55                   	push   %rbp
    12ed:	48 8d 2d cc 2a 00 00 	lea    0x2acc(%rip),%rbp        # 3dc0 <__do_global_dtors_aux_fini_array_entry>
    12f4:	53                   	push   %rbx
    12f5:	4c 29 fd             	sub    %r15,%rbp
    12f8:	48 83 ec 08          	sub    $0x8,%rsp
    12fc:	e8 ff fc ff ff       	callq  1000 <_init>
    1301:	48 c1 fd 03          	sar    $0x3,%rbp
    1305:	74 1f                	je     1326 <__libc_csu_init+0x56>
    1307:	31 db                	xor    %ebx,%ebx
    1309:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1310:	4c 89 f2             	mov    %r14,%rdx
    1313:	4c 89 ee             	mov    %r13,%rsi
    1316:	44 89 e7             	mov    %r12d,%edi
    1319:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    131d:	48 83 c3 01          	add    $0x1,%rbx
    1321:	48 39 dd             	cmp    %rbx,%rbp
    1324:	75 ea                	jne    1310 <__libc_csu_init+0x40>
    1326:	48 83 c4 08          	add    $0x8,%rsp
    132a:	5b                   	pop    %rbx
    132b:	5d                   	pop    %rbp
    132c:	41 5c                	pop    %r12
    132e:	41 5d                	pop    %r13
    1330:	41 5e                	pop    %r14
    1332:	41 5f                	pop    %r15
    1334:	c3                   	retq   
    1335:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    133c:	00 00 00 00 

0000000000001340 <__libc_csu_fini>:
    1340:	f3 0f 1e fa          	endbr64 
    1344:	c3                   	retq   

Disassembly of section .fini:

0000000000001348 <_fini>:
    1348:	f3 0f 1e fa          	endbr64 
    134c:	48 83 ec 08          	sub    $0x8,%rsp
    1350:	48 83 c4 08          	add    $0x8,%rsp
    1354:	c3                   	retq   
